---
# add-kubelet-logging tasks

- name: check to ensure promdir target exists
  ansible.builtin.stat:
    path: "{{ prometheus_dir }}"
  register: promdir

- name: Check if the file exists
  ansible.builtin.stat:
    path: "{{ sa_token_file }}"
  register: token_file

- block:
  - name: load sa-token file from localhost
    ansible.builtin.slurp:
      src: "{{ sa_token_file }}"
    register: bearer_token_slurp
    delegate_to: localhost

  - name: decode bearer token
    set_fact:
      bearer_token: "{{ bearer_token_slurp.content | b64decode }}"

  - name: create metrics service account token file in prometheus folder
    ansible.builtin.copy:
      content: "{{ bearer_token }}"
      dest: "{{ kubelet_auth_token_file }}"
    when: promdir.stat.exists

  - name: remove the sa-token file
    ansible.builtin.file:
      path: "{{ sa_token_file }}"
      state: absent
  when: token_file.stat.exists

- name: append kubelet scrape config target to prometheus config
  ansible.builtin.blockinfile:
    path: "{{ prometheus_config }}"
    block: |
      # kubelet targets
        - job_name: kubelet
          scheme: https
          authorization:
            credentials_file: "{{ kubelet_auth_token_file }}"
          tls_config:
            insecure_skip_verify: true
          static_configs:
            - targets:
              - microshift-dev:10250

        - job_name: kubelet cadvisor
          scheme: https
          authorization:
            credentials_file: "{{ kubelet_auth_token_file }}"
          tls_config:
            insecure_skip_verify: true
          metrics_path: /metrics/cadvisor
          static_configs:
            - targets:
              - microshift-dev:10250

- name: restart prometheus to pick up new target
  ansible.builtin.systemd:
    state: restarted
    name: prometheus
